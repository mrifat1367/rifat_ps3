# Problem set 3
import math    #In case if needed
import numpy as np

# Installing Package
!pip install pandas Code to install panda
import pandas as pd

# Question 1

#Reading file
data = pd.read_csv("https://raw.githubusercontent.com/CompTools/Class_Files/master/data/CO-OPS__8729108__wl.csv") #Importing file from github.
mydata = pd.DataFrame(data) #Framing data
print(mydata) #Checking if everything is okay
x = mydata.iloc[:,[1]] #Cut column containing Water Level
x.columns = ['Water_Level'] #Renaming column
# Creating a loop to read through the file line by line 
highest = None
print('Before:', highest)
for i in x['Water_Level']:
    if highest is None or highest < i:
        highest = i
    print('Loop:', i, highest)
print('highest:', highest)
#Date and time with highest water level
mydata.loc[mydata.iloc[:,1] == highest] 

#Question 2
# Date and time of Maximum Water level
mx = mydata.iloc[mydata.iloc[:,1].idxmax()]
print("Maximum water level:\n",mx)

# Date and time of Minimum Water level
mn = mydata.iloc[mydata.iloc[:,1].idxmin()]
print("Minimum water level:\n",mn)

#Average Water Level
average = (x.sum()/len(x))
print("Average water level \n:",average)

#Question 3
#Question 3
df = x
df["change"] = df.diff() #New column containing change in Water Level
print(df)
y = df.iloc[df["change"].idxmax()]
print(y)
fastest = y[0] #Value of the fastest rise
print("Fastest rise in water level is: \n", y[1])
f = mydata.loc[mydata.iloc[:,1] == fastest] #Date and time of the fastest rise
print("Date and time of fastest rise: \n",f)

#Question 4
# Check if the water level increases more than 0.25 since the previous recording.

for j in x["Water_Level"]:
    if 5 < j:
        print("Warning: Water Level is above 5.0 and the reading is:",j)
df["change"] = df.diff()
print(df)

#Check if the water level is over 5.0.
for k in df["change"]:
    if 0.25 < k:
        print("Warning: Water is rising very fast and the rate is:",k)
        
# Check the time point when no recording is recieved.
z = df.isnull()
count =0
for l in z["Water_Level"]:
    count +=1
    if l is True :
        print(count,"Warning:No reading is received at a time point")
